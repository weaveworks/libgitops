package transactional_test

import (
	"context"
	"strings"
	"testing"

	"github.com/weaveworks/libgitops/pkg/storage/client"
	"github.com/weaveworks/libgitops/pkg/storage/client/transactional"
	"github.com/weaveworks/libgitops/pkg/storage/client/transactional/distributed/git/github"
	"github.com/weaveworks/libgitops/pkg/storage/commit"
	"sigs.k8s.io/cluster-api/api/v1alpha3"
)

func TestFoo(t *testing.T) {
	gitClient, _ := transactional.NewGeneric(nil, nil)
	ctx := context.Background()

	var machineList v1alpha3.MachineList
	_ = gitClient.
		AtRef(commit.AtBranch("main")).  // Start tx from main branch
		Transaction(ctx, "foo-update-"). // Autogenerated suffix
		List(&machineList).              // Load all Machine object into machineList
		Run(func(ctx context.Context, txClient client.Client) error {
			for i := range machineList.Items {
				machine := &machineList.Items[i]
				// Skip all machines whose names don't start with foo
				if !strings.HasPrefix(machine.Name, "foo") {
					continue
				}
				machine.ClusterName = "weave-gitops-cluster"
				// Update the Machine object in Git
				if err := txClient.Update(ctx, machine); err != nil {
					return err
				}
			}
			return nil
		}). // Do a commit, and a PR using go-git-providers, too.
		Commit(github.PullRequest{
			Request: commit.GenericRequest{
				Name:        "Lucas Käldström",
				Email:       "lucas@weave.works",
				Title:       "Update CAPI machines",
				Description: "Machines with prefix foo are now in the Weave cluster",
			},
			TargetBranch: "main",
			Labels:       []string{"kind/automatic"},
			Assignees:    []string{"luxas"},
			Milestone:    "v1.0.1",
		})
}
